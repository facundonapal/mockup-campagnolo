function disciplineSwitch() {
    $(".switch").click(function() {
        return active = $(".switcher", this).toggleClass("active").is(".active"),
        $tab = $(this).attr("id"),
        active ? $(".list", $tab).slideUp(300, "easeInOutQuart", function() {
            $(".picture", $tab).slideDown(300, "easeInOutQuart")
        }) : $(".picture", $tab).slideUp(300, "easeInOutQuart", function() {
            $(".list", $tab).slideDown(300, "easeInOutQuart")
        }),
        !1
    });
    $(window).resize(function() {
        $(window).width() < 768 && ($("#hp_discipline .picture").hide(),
        $("#hp_discipline .list").show())
    }).trigger("resize")
}
function focusOn() {
    $("#focus_on .toolbar a").click(function() {
        return $t = $(this),
        $t.addClass("active").siblings().removeClass("active"),
        $("#focus_on .prod_row").removeClass("active"),
        $($t.attr("href")).addClass("active"),
        !1
    })
}
function timeline() {
    $.ajax({
        type: "POST",
        contentType: "application/json; charset=utf-8",
        url: "/WS/wsContent.asmx/GetTimelineNews",
        cache: !1,
        dataType: "json",
        success: function(n) {
            newsObj = n.d;
            $(window).resize(function() {
                build()
            }).resize()
        }
    })
}
function getNewsById(n) {
    $news = $("#home_news");
    $.ajax({
        type: "POST",
        contentType: "application/json; charset=utf-8",
        url: "/WS/wsContent.asmx/GetHighlightNews",
        data: "{id:" + n + "}",
        cache: !1,
        dataType: "json",
        success: function(n) {
            var t = n.d
              , s = t.id
              , i = t.cat
              , u = t.date
              , r = t.tit
              , f = t.img
              , e = t.text
              , o = t.url;
            $(".cat:eq(0)", $news).html(i);
            $(".cat:eq(1)", $news).html(i + ' <span class="data">' + u + "<\/span>");
            $(".home_news .tit", $news).slideUp(300, function() {
                $(this).html(r).slideDown(300)
            });
            $(".home_news .txt", $news).delay(150).slideUp(300, function() {
                $(this).html(e).slideDown(300)
            });
            $(".home_news .img img", $news).attr({
                src: f
            }, {
                alt: r
            });
            $(".home_news .cta", $news).attr({
                href: o
            });
            $("html, body").stop().animate({
                scrollTop: $news.offset().top
            }, 400, "easeInOutQuart")
        }
    })
}
function build() {
    function ct(n, t) {
        return month = (12 + n + t) % 12
    }
    function lt(n) {
        var n = new Date(n)
          , i = n.getMonth()
          , r = n.getDate()
          , t = $.inArray(i, rt)
          , f = Math.round((h + 1) * r / 30)
          , u = f + t * h;
        return t != -1 ? u : -1
    }
    function at(n, t) {
        if (this.config = n,
        this.config.i = t,
        theDay = lt(n.date),
        theDay == -1)
            return !1;
        point = theDay;
        this.config.x = c[point].x;
        this.config.y = c[point].y;
        this.pin = new Kinetic.Circle({
            x: this.config.x,
            y: this.config.y,
            radius: 4.5,
            fill: "#fff",
            stroke: "#54616e",
            strokeWidth: 2
        });
        this.pin.on("mouseover touchstart check", function() {
            this.fill("#1fb5fd");
            x = n.x;
            y = n.y;
            vt(n.text.toUpperCase() + " " + n.date.toUpperCase(), x, y)
        }).on("click", function() {
            getNewsById(n.id);
            actualPin = n.i
        });
        this.pin.on("mouseout touchend", function() {
            var n = this;
            n.fill("#fff")
        });
        it.add(this.pin)
    }
    function vt(t, i, r) {
        n.x(i + 25);
        n.y(r - 39);
        l.x(i - 17);
        l.y(r - 45);
        n.setText(t);
        f.draw();
        n.getWidth() + n.getX() > e ? (n.align("right"),
        n.x(x - n.getWidth() - 25)) : n.align("left");
        f.draw()
    }
    var u = new Kinetic.Stage({
        container: "timeline_news",
        width: $(".container").width(),
        height: 175
    }), e = u.getWidth(), yt = u.getHeight(), nt = new Kinetic.Layer, o = new Kinetic.Layer, tt = new Kinetic.Layer, f = new Kinetic.Layer, it = new Kinetic.Layer, v = 6, t = e / v - 1 / (v - 1), h = 31, st = new Date, s = ["GEN", "FEB", "MAR", "APR", "MAG", "GIU", "LUG", "AGO", "SEP", "OCT", "NOV", "DEC"], ht = st.getMonth(), rt = [], p = [], w = [], b = [], ut = [], ft, et, ot, c, r, k, d, g, n, l, a;
    for (i = 0; i <= v; i++)
        ft = i % 2 == 0 ? "rgba(255,255,255,0)" : "rgba(255,255,255,.02)",
        b.push(new Kinetic.Line({
            points: [0, 20, t, 20, t, 121, 0, 121],
            fill: ft,
            closed: !0
        })),
        b[i].move({
            x: t * i + 1,
            y: 0
        }),
        o.add(b[i]),
        p.push(new Kinetic.Line({
            points: [0, 0, 0, 100],
            stroke: "#55606a",
            strokeWidth: 1,
            lineCap: "round",
            lineJoin: "round",
            dash: [5, 2]
        })),
        p[i].move({
            x: t * i + 1,
            y: 20
        }),
        o.add(p[i]),
        et = i % 2 == 0 ? "#1e1f20" : "#fff",
        w.push(new Kinetic.Line({
            points: [0, 0, t, 0],
            stroke: et,
            strokeWidth: 2,
            lineCap: "round",
            lineJoin: "round"
        })),
        w[i].move({
            x: t * i + 2,
            y: 123
        }),
        o.add(w[i]),
        diffMonth = -(4 - i),
        month = ct(ht, diffMonth),
        ot = s[month],
        ut.push(new Kinetic.Text({
            x: t * i + 2,
            y: 130,
            text: ot,
            fontSize: 11,
            fontFamily: '"Source Sans Pro", sans-serif',
            fill: "#b5bbc2"
        })),
        rt.push(month),
        o.add(ut[i]);
    for (c = [],
    r = new Kinetic.Line({
        points: [0, 122],
        stroke: "#54616e",
        fill: "#2b313a",
        strokeWidth: 2.5,
        lineCap: "round",
        lineJoin: "round",
        tension: 0,
        closed: !0
    }),
    TimeLineY = [109, 106, 104, 101, 99, 96, 94, 89, 85, 80, 75, 79, 83, 81, 79, 87, 96, 94, 93, 91, 90, 91, 92, 90, 89, 87, 85, 80, 75, 72, 69, 63, 58, 63, 68, 66, 64, 69, 75, 76, 77, 74, 72, 75, 78, 76, 72, 68, 65, 67, 59, 55, 50, 47, 44, 46, 49, 50, 51, 55, 59, 62, 65, 70, 75, 72, 69, 72, 76, 81, 86, 89, 92, 89, 87, 83, 80, 76, 72, 69, 66, 61, 56, 61, 67, 65, 63, 66, 70, 74, 79, 80, 82, 78, 75, 76, 77, 75, 73, 72, 71, 68, 65, 70, 75, 76, 78, 81, 83, 85, 87, 89, 92, 88, 84, 85, 86, 84, 82, 81, 80, 82, 84, 80, 77, 78, 79, 75, 71, 67, 64, 60, 56, 58, 60, 56, 53, 54, 55, 51, 48, 47, 46, 51, 55, 59, 62, 65, 70, 75, 72, 69, 72, 76, 81, 86, 89, 92, 89, 87, 83, 80, 76, 72, 69, 66, 61, 56, 61, 67, 65, 63, 66, 70, 74, 79, 80, 82, 78, 75, 76, 77, 75, 73, 72],
    i = 0; i < s.length * h; i++)
        k = t * i / h,
        d = TimeLineY[i] != "undefined" ? TimeLineY[i] : 110,
        r.points(r.points().concat([k, d])),
        c.push({
            x: k,
            y: d
        });
    for (r.points(r.points().concat([e, 80])),
    r.points(r.points().concat([e, 122])),
    r.move({
        x: 0,
        y: 0
    }),
    nt.add(r),
    g = new Kinetic.Line({
        points: [0, 121, t * s.length, 121, s.length * s.length, 0, e, 0, e, 140, 0, 140],
        fill: "#3b4856",
        lineCap: "round",
        lineJoin: "round",
        closed: !0
    }),
    g.move({
        x: 0,
        y: 0
    }),
    tt.add(g),
    i = 0; i < newsObj.length; i++)
        Pins.push(new at(newsObj[i],i));
    n = new Kinetic.Text({
        text: "",
        fontFamily: '"Source Sans Pro", sans-serif',
        fontSize: 14,
        lineHeight: 1,
        width: 170,
        height: 100,
        scaleX: 1,
        scaleY: 1,
        wrap: "word",
        fill: "#54c9ff"
    });
    f.add(n);
    a = new Image;
    a.src = "/img/bikePin.png";
    a.onload = function() {
        l = new Kinetic.Image({
            x: -1e3,
            y: -1e3,
            image: a,
            width: 34,
            height: 39
        });
        f.add(l);
        f.draw()
    }
    ;
    f.draw();
    u.add(nt);
    u.add(tt);
    u.add(o);
    u.add(f);
    u.add(it)
}
$(function() {
    disciplineSwitch();
    focusOn()
});
var actualPin = 0, Pins = [], newsObj;
$(function() {
    if ($("html.canvas").size()) {
        timeline();
        $('<div class="arr next" /><div class="arr prev" />').appendTo($("#home_news"));
        function n(n) {
            n == "next" ? actualPin-- : actualPin++;
            actualPin < 0 ? actualPin = newsObj.length - 1 : actualPin >= newsObj.length && (actualPin = 0);
            Pins[actualPin].pin.fire("mouseover").fire("click")
        }
        $("#home_news").on("click", ".arr", function() {
            n($(this).attr("class").split(" ")[1])
        })
    }
});
/*
//# sourceMappingURL=homepage-timeline.min.js.map
*/
